const TelegramBot = require('node-telegram-bot-api');
const express = require('express');
const app = express();

if (!process.env.BOT_TOKEN) {
  console.error('ERROR: BOT_TOKEN not found!');
  process.exit(1);
}

const token = process.env.BOT_TOKEN;
const bot = new TelegramBot(token, {polling: true});

console.log('–ë–æ—Ç –ê–Ω–∏–º–∞–¥—Ä—É–≥ –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');

const userProgress = {};

// ASCII-–∞–Ω–∏–º–∞—Ü–∏–∏
const ASCII_ANIMATIONS = {
  lesson1: 
    `üéæ **–ê–Ω–∏–º–∞—Ü–∏—è —à–∞—Ä–∏–∫–∞:**\n\n` +
    `–ö–∞–¥—Ä 1 (—à–∞—Ä–∏–∫ –≤–≤–µ—Ä—Ö—É):\n` +
    `    ‚óã\n` +
    `    \n` +
    `    \n` +
    `–ö–∞–¥—Ä 2 (—à–∞—Ä–∏–∫ –≤–Ω–∏–∑—É):\n` +
    `    \n` +
    `    O\n` +
    `    \n` +
    `–ö–∞–¥—Ä 3 (—à–∞—Ä–∏–∫ —Å–Ω–æ–≤–∞ –≤–≤–µ—Ä—Ö—É):\n` +
    `    ‚óã\n` +
    `    \n` +
    `    \n\n` +
    `üí° –û–±—Ä–∞—Ç–∏ –≤–Ω–∏–º–∞–Ω–∏–µ: —à–∞—Ä–∏–∫ —Ä–∞—Å—Ç—è–≥–∏–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –ø–∞–¥–µ–Ω–∏–∏ –∏ —Å–∂–∏–º–∞–µ—Ç—Å—è –ø—Ä–∏ –æ—Ç—Å–∫–æ–∫–µ!`,

  lesson2:
    `üèÉ‚Äç‚ôÇÔ∏è **–ê–Ω–∏–º–∞—Ü–∏—è –±–µ–≥—É—â–µ–≥–æ —á–µ–ª–æ–≤–µ—á–∫–∞:**\n\n` +
    `–ü–æ–∑–∏—Ü–∏—è 1 (–ø–æ–¥–≥–æ—Ç–æ–≤–∫–∞):\n` +
    `    O\n` +
    `   /|\\\\\n` +
    `   / \\\\\n\n` +
    `–ü–æ–∑–∏—Ü–∏—è 2 (–ø–µ—Ä–µ–Ω–æ—Å –≤–µ—Å–∞):\n` +
    `    O\n` +
    `   /|\\\\\n` +
    `   / \\\\\n\n` +
    `–ü–æ–∑–∏—Ü–∏—è 3 (—Ç–æ–ª—á–æ–∫):\n` +
    `    O\n` +
    `   /|\\\\\n` +
    `   / \\\\\n\n` +
    `–ü–æ–∑–∏—Ü–∏—è 4 (–ø–æ–ª–µ—Ç):\n` +
    `    O\n` +
    `   /|\\\\\n` +
    `   / \\\\\n\n` +
    `üí° –î–≤–∏–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç—Å—è –∑–∞ —Å—á–µ—Ç –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø–æ–ª–æ–∂–µ–Ω–∏—è —Ä—É–∫ –∏ –Ω–æ–≥!`,

  lesson3:
    `üïäÔ∏è **–ê–Ω–∏–º–∞—Ü–∏—è –ª–µ—Ç–∞—é—â–µ–π –ø—Ç–∏—Ü—ã:**\n\n` +
    `–ö—Ä—ã–ª—å—è –≤–≤–µ—Ä—Ö—É:\n` +
    `   \\\\ /\n` +
    `    O\n` +
    `   / \\\\\n\n` +
    `–ö—Ä—ã–ª—å—è –ø–æ—Å–µ—Ä–µ–¥–∏–Ω–µ:\n` +
    `   --\n` +
    `    O\n` +
    `   --\n\n` +
    `–ö—Ä—ã–ª—å—è –≤–Ω–∏–∑—É:\n` +
    `   / \\\\\n` +
    `    O\n` +
    `   \\\\ /\n\n` +
    `üí° –ü–ª–∞–≤–Ω–æ–µ –≤–æ–ª–Ω–æ–æ–±—Ä–∞–∑–Ω–æ–µ –¥–≤–∏–∂–µ–Ω–∏–µ —Å–æ–∑–¥–∞–µ—Ç —ç—Ñ—Ñ–µ–∫—Ç –ø–æ–ª–µ—Ç–∞!`
};

const mainMenu = {
  reply_markup: {
    keyboard: [
      ['üéì –ù–∞—á–∞—Ç—å —É—Ä–æ–∫', 'üìö –ü—Ä–∏–º–µ—Ä—ã'],
      ['‚≠ê –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å', '‚ùì –ü–æ–º–æ—â—å']
    ],
    resize_keyboard: true
  }
};

const lessonsMenu = {
  reply_markup: {
    keyboard: [
      ['üìù –£—Ä–æ–∫ 1: –ü—Ä—ã–≥–∞—é—â–∏–π —à–∞—Ä–∏–∫'],
      ['üé® –£—Ä–æ–∫ 2: –ë–µ–≥—É—â–∏–π —á–µ–ª–æ–≤–µ—á–µ–∫'],
      ['‚ú® –£—Ä–æ–∫ 3: –õ–µ—Ç–∞—é—â–∞—è –ø—Ç–∏—Ü–∞'],
      ['üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é']
    ],
    resize_keyboard: true
  }
};

bot.onText(/\/start/, (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name || '–¥—Ä—É–≥';
  
  if (!userProgress[chatId]) {
    userProgress[chatId] = {
      lessonsCompleted: [],
      currentLesson: null,
      lastActivity: new Date()
    };
  }

  const welcomeText = `–ü—Ä–∏–≤–µ—Ç, ${userName}! –Ø –ê–Ω–∏–º–∞–¥—Ä—É–≥! üé®\n\n–Ø –ø–æ–º–æ–≥—É —Ç–µ–±–µ –æ—Å–≤–æ–∏—Ç—å –∞–Ω–∏–º–∞—Ü–∏—é! –í—ã–±–µ—Ä–∏, —á—Ç–æ —Ö–æ—á–µ—à—å —Å–¥–µ–ª–∞—Ç—å:`;
  bot.sendMessage(chatId, welcomeText, mainMenu);
});

bot.on('message', (msg) => {
  const chatId = msg.chat.id;
  const text = msg.text;
  const userName = msg.from.first_name || '–¥—Ä—É–≥';

  if (text.startsWith('/')) return;

  if (!userProgress[chatId]) {
    userProgress[chatId] = {
      lessonsCompleted: [],
      currentLesson: null,
      lastActivity: new Date()
    };
  }

  switch(text) {
    case 'üéì –ù–∞—á–∞—Ç—å —É—Ä–æ–∫':
      bot.sendMessage(chatId, `–û—Ç–ª–∏—á–Ω–æ, ${userName}! –í—ã–±–µ—Ä–∏ —É—Ä–æ–∫:`, lessonsMenu);
      break;

    case 'üìù –£—Ä–æ–∫ 1: –ü—Ä—ã–≥–∞—é—â–∏–π —à–∞—Ä–∏–∫':
      userProgress[chatId].currentLesson = 'lesson1';
      
      // –°–Ω–∞—á–∞–ª–∞ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º ASCII-–∞–Ω–∏–º–∞—Ü–∏—é
      bot.sendMessage(chatId, ASCII_ANIMATIONS.lesson1)
        .then(() => {
          // –ü–æ—Ç–æ–º –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–¥–∞–Ω–∏–µ
          const lesson1Text = `\n${userName}, —Ç–µ–ø–µ—Ä—å —Ç–≤–æ—è –æ—á–µ—Ä–µ–¥—å! üéØ\n\n` +
                           `üìù **–£—Ä–æ–∫ 1: –ü—Ä—ã–≥–∞—é—â–∏–π —à–∞—Ä–∏–∫**\n\n` +
                           `üéØ **–ó–∞–¥–∞–Ω–∏–µ:** –ù–∞—Ä–∏—Å—É–π 3 –∫–∞–¥—Ä–∞:\n` +
                           `1. –®–∞—Ä–∏–∫ –≤–≤–µ—Ä—Ö—É (—Å–∂–∞—Ç—ã–π)\n` +
                           `2. –®–∞—Ä–∏–∫ –≤–Ω–∏–∑—É (—Ä–∞—Å—Ç—è–Ω—É—Ç—ã–π)\n` +
                           `3. –®–∞—Ä–∏–∫ —Å–Ω–æ–≤–∞ –≤–≤–µ—Ä—Ö—É\n\n` +
                           `–ö–∞–∫ –Ω–∞—Ä–∏—Å—É–µ—à—å - –ø—Ä–∏—Å—ã–ª–∞–π —Å–≤–æ–∏ –∫–∞–¥—Ä—ã! üé®`;
          return bot.sendMessage(chatId, lesson1Text, mainMenu);
        });
      break;

    case 'üé® –£—Ä–æ–∫ 2: –ë–µ–≥—É—â–∏–π —á–µ–ª–æ–≤–µ—á–µ–∫':
      userProgress[chatId].currentLesson = 'lesson2';
      
      bot.sendMessage(chatId, ASCII_ANIMATIONS.lesson2)
        .then(() => {
          const lesson2Text = `\n${userName}, —Ç–µ–ø–µ—Ä—å —Ç–≤–æ—è –æ—á–µ—Ä–µ–¥—å! üé≠\n\n` +
                           `üìù **–£—Ä–æ–∫ 2: –ë–µ–≥—É—â–∏–π —á–µ–ª–æ–≤–µ—á–µ–∫**\n\n` +
                           `üéØ **–ó–∞–¥–∞–Ω–∏–µ:** –ù–∞—Ä–∏—Å—É–π 4 –∫–∞–¥—Ä–∞:\n` +
                           `1. –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∫ —à–∞–≥—É\n` +
                           `2. –ü–µ—Ä–µ–Ω–æ—Å –≤–µ—Å–∞\n` +
                           `3. –¢–æ–ª—á–æ–∫\n` +
                           `4. –ü–æ–ª—ë—Ç–Ω–∞—è —Ñ–∞–∑–∞\n\n` +
                           `–ñ–¥—É —Ç–≤–æ–∏ —Ä–∏—Å—É–Ω–∫–∏! üèÉ‚Äç‚ôÇÔ∏è`;
          return bot.sendMessage(chatId, lesson2Text, mainMenu);
        });
      break;

    case '‚ú® –£—Ä–æ–∫ 3: –õ–µ—Ç–∞—é—â–∞—è –ø—Ç–∏—Ü–∞':
      userProgress[chatId].currentLesson = 'lesson3';
      
      bot.sendMessage(chatId, ASCII_ANIMATIONS.lesson3)
        .then(() => {
          const lesson3Text = `\n${userName}, —Ç–µ–ø–µ—Ä—å —Ç–≤–æ—è –æ—á–µ—Ä–µ–¥—å! üåä\n\n` +
                           `üìù **–£—Ä–æ–∫ 3: –õ–µ—Ç–∞—é—â–∞—è –ø—Ç–∏—Ü–∞**\n\n` +
                           `üéØ **–ó–∞–¥–∞–Ω–∏–µ:** –ù–∞—Ä–∏—Å—É–π 3 –∫–∞–¥—Ä–∞:\n` +
                           `1. –ö—Ä—ã–ª—å—è –≤–≤–µ—Ä—Ö\n` +
                           `2. –ö—Ä—ã–ª—å—è –≤ —Å–µ—Ä–µ–¥–∏–Ω–µ\n` +
                           `3. –ö—Ä—ã–ª—å—è –≤–Ω–∏–∑—É\n\n` +
                           `–¢—ã —Å–ø—Ä–∞–≤–∏—à—å—Å—è! –ü—Ä–∏—Å—ã–ª–∞–π —Å–≤–æ—é –ø—Ç–∏—Ü—É! üïäÔ∏è`;
          return bot.sendMessage(chatId, lesson3Text, mainMenu);
        });
      break;

    case 'üìö –ü—Ä–∏–º–µ—Ä—ã':
      // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Å–µ ASCII-–∞–Ω–∏–º–∞—Ü–∏–∏
      let examplesText = `üìö **–í—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–π:**\n\n`;
      examplesText += ASCII_ANIMATIONS.lesson1 + `\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`;
      examplesText += ASCII_ANIMATIONS.lesson2 + `\n\n‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\n\n`;
      examplesText += ASCII_ANIMATIONS.lesson3 + `\n\n`;
      examplesText += `–í—ã–±–∏—Ä–∞–π —É—Ä–æ–∫ –∏ –Ω–∞—á–∏–Ω–∞–π —Ç–≤–æ—Ä–∏—Ç—å! –£ —Ç–µ–±—è –≤—Å—ë –ø–æ–ª—É—á–∏—Ç—Å—è! üåü`;
      
      bot.sendMessage(chatId, examplesText, mainMenu);
      break;

    case '‚≠ê –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å':
      const progress = userProgress[chatId];
      const completedCount = progress.lessonsCompleted.length;
      
      let progressText = `‚≠ê **–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å, ${userName}:**\n\n`;
      progressText += `‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ —É—Ä–æ–∫–æ–≤: ${completedCount}/3\n`;
      
      if (completedCount === 0) {
        progressText += `üéØ –¢—ã –µ—â–µ –Ω–µ –Ω–∞—á–∞–ª(–∞) —É—Ä–æ–∫–∏ - —Å–∞–º–æ–µ –≤—Ä–µ–º—è –Ω–∞—á–∞—Ç—å!`;
      } else if (completedCount === 1) {
        progressText += `üéØ –û—Ç–ª–∏—á–Ω–æ–µ –Ω–∞—á–∞–ª–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!`;
      } else if (completedCount === 2) {
        progressText += `üéØ –ó–¥–æ—Ä–æ–≤–æ! –û—Å—Ç–∞–ª—Å—è –≤—Å–µ–≥–æ –æ–¥–∏–Ω —É—Ä–æ–∫!`;
      } else {
        progressText += `üéØ –ü–æ—Ç—Ä—è—Å–∞—é—â–µ! –¢—ã –∑–∞–≤–µ—Ä—à–∏–ª(–∞) –≤—Å–µ —É—Ä–æ–∫–∏! –¢—ã - –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–Ω–∏–º–∞—Ç–æ—Ä! üèÜ`;
      }
      
      bot.sendMessage(chatId, progressText, mainMenu);
      break;

    case '‚ùì –ü–æ–º–æ—â—å':
      const helpText = `‚ùì **–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É:**\n\n` +
                      `–Ø –∑–¥–µ—Å—å, —á—Ç–æ–±—ã –ø–æ–º–æ—á—å —Ç–µ–±–µ –Ω–∞—É—á–∏—Ç—å—Å—è –∞–Ω–∏–º–∞—Ü–∏–∏!\n\n` +
                      `**–ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è:**\n` +
                      `‚Ä¢ üéì –ù–∞—á–∞—Ç—å —É—Ä–æ–∫ - –∏–∑—É—á–∞–π ASCII-–∞–Ω–∏–º–∞—Ü–∏—é –∏ –≤—ã–ø–æ–ª–Ω—è–π –∑–∞–¥–∞–Ω–∏–µ\n` +
                      `‚Ä¢ üìö –ü—Ä–∏–º–µ—Ä—ã - –ø–æ—Å–º–æ—Ç—Ä–∏ –≤—Å–µ –ø—Ä–∏–º–µ—Ä—ã –∞–Ω–∏–º–∞—Ü–∏–π\n` +
                      `‚Ä¢ ‚≠ê –ú–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å - –æ—Ç—Å–ª–µ–∂–∏–≤–∞–π —Å–≤–æ–∏ —É—Å–ø–µ—Ö–∏\n\n` +
                      `–ù—É–∂–Ω–∞ –ø–æ–º–æ—â—å? –ü–∏—à–∏ - –ø–æ–º–æ–≥—É! ü§ó`;
      bot.sendMessage(chatId, helpText, mainMenu);
      break;

    case 'üîô –ù–∞–∑–∞–¥ –≤ –º–µ–Ω—é':
      bot.sendMessage(chatId, `–í–æ–∑–≤—Ä–∞—â–∞–µ–º—Å—è –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é! ‚ú®`, mainMenu);
      break;

    default:
      if (msg.text && !msg.text.startsWith('/')) {
        bot.sendMessage(chatId, `–í—ã–±–µ—Ä–∏ –¥–µ–π—Å—Ç–≤–∏–µ –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ üëá`, mainMenu);
      }
  }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π
bot.on('photo', (msg) => {
  const chatId = msg.chat.id;
  const userName = msg.from.first_name || '–¥—Ä—É–≥';
  const progress = userProgress[chatId];
  
  if (!progress) return;
  
  let response = '';
  
  if (progress.currentLesson === 'lesson1' && !progress.lessonsCompleted.includes(1)) {
    progress.lessonsCompleted.push(1);
    response = `–í–∞—É, ${userName}! –¢—ã –Ω–∞—Ä–∏—Å–æ–≤–∞–ª(–∞) –ø—Ä—ã–≥–∞—é—â–∏–π —à–∞—Ä–∏–∫! üéæ\n\n` +
               `–°—Ä–∞–≤–Ω–∏ —Å –ø—Ä–∏–º–µ—Ä–æ–º - —É —Ç–µ–±—è –∑–¥–æ—Ä–æ–≤–æ –ø–æ–ª—É—á–∏–ª–æ—Å—å!\n\n` +
               `‚úÖ **–£—Ä–æ–∫ 1 –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n` +
               `–ü–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É —É—Ä–æ–∫—É! üöÄ`;
  }
  else if (progress.currentLesson === 'lesson2' && !progress.lessonsCompleted.includes(2)) {
    progress.lessonsCompleted.push(2);
    response = `–ü–æ—Ç—Ä—è—Å–∞—é—â–µ, ${userName}! –¢—ã —Å–æ–∑–¥–∞–ª(–∞) –±–µ–≥—É—â–µ–≥–æ —á–µ–ª–æ–≤–µ—á–∫–∞! üèÉ‚Äç‚ôÇÔ∏è\n\n` +
               `–¢—ã –Ω–∞—É—á–∏–ª—Å—è(–∞—Å—å) –∞–Ω–∏–º–∏—Ä–æ–≤–∞—Ç—å –ø–µ—Ä—Å–æ–Ω–∞–∂–µ–π!\n\n` +
               `‚úÖ **–£—Ä–æ–∫ 2 –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n` +
               `–¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å! üí™`;
  }
  else if (progress.currentLesson === 'lesson3' && !progress.lessonsCompleted.includes(3)) {
    progress.lessonsCompleted.push(3);
    response = `–í–æ—Å—Ö–∏—Ç–∏—Ç–µ–ª—å–Ω–æ, ${userName}! –¢—ã –æ–∂–∏–≤–∏–ª(–∞) –ª–µ—Ç–∞—é—â—É—é –ø—Ç–∏—Ü—É! üïäÔ∏è\n\n` +
               `–¢—ã –æ—Å–≤–æ–∏–ª(–∞) –ø–ª–∞–≤–Ω—É—é –∞–Ω–∏–º–∞—Ü–∏—é!\n\n` +
               `‚úÖ **–£—Ä–æ–∫ 3 –∑–∞–≤–µ—Ä—à–µ–Ω!**\n\n` +
               `üéâ **–ü–û–ó–î–†–ê–í–õ–Ø–Æ!** –¢—ã - –Ω–∞—Å—Ç–æ—è—â–∏–π –∞–Ω–∏–º–∞—Ç–æ—Ä! üèÜ`;
  }
  else {
    response = `–ö—Ä—É—Ç–æ, ${userName}! –ù–æ–≤—ã–π —Ä–∏—Å—É–Ω–æ–∫! üé®\n\n` +
               `–ü—Ä–æ–¥–æ–ª–∂–∞–π –ø—Ä–∞–∫—Ç–∏–∫–æ–≤–∞—Ç—å—Å—è! ‚ú®`;
  }
  
  progress.lastActivity = new Date();
  bot.sendMessage(chatId, response, mainMenu);
});

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log('–ë–æ—Ç –ê–Ω–∏–º–∞–¥—Ä—É–≥ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ—Ä—Ç—É ' + PORT);
});
